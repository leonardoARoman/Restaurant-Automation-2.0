syntax  = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.restaurantnetworkapp";
option java_outer_classname = "RestaurantServiceProto";
option objc_class_prefix = "RTG";

package restaurant;

service RestaurantService
{
	/* add a list of tables: Generally taken care by launching the server */
	rpc setup (TableRecord) returns (stream Table) {}
	/* add a table to the restaurant: Taken care by admin */
	rpc add	(Table) returns (Response) {}
	/* Make update on a table get back table record list */
	rpc update (Table) returns (stream Table) {}
	/* Request table record list on waiter request by refresh */
	rpc tables (Response) returns (stream Table) {}
	/* Request order status by order id */
	rpc status (Response) returns (Order) {}
	/* Get orders in queue */
	rpc orderqueue (Response) returns (stream Order) {}
	/* Send order stream and publish the dishes to respective kitchen monitor */
	rpc orderstream (stream SendOrder) returns (stream RecievedOrder) {}
}

message Response
{
	string message = 1;
}

message Table
{
  int64 	tableID 	= 1;
  enum TableState
  {
    CLEAN = 0;
    TAKEN = 1;
    DIRTY = 2;
  }
  TableState status = 2;

}

message Dish
{
	int32	id		= 1;
	string	name	= 2;
	string	comment	= 3;
	bool	isReady	= 4;	 
}	

message SendOrder
{
	int32			number	= 1;
	repeated Dish	dishes	= 2;
}	

message RecievedOrder
{
	SendOrder order = 1;
}

message Order
{
	int32 		orderID 		= 1;
	int64 		orderNo 		= 2;
	bool 		isCompleated 	= 3;
	Table 		tableNumber 	= 4;
	SendOrder	order 			= 5; 
}

message TableRecord
{
  repeated Table tbl  = 1;
}
